{
  "name": "repo-quality",
  "version": "1.0.0",
  "description": "tech tools quality of repos",
  "author": "Robert Willemelis (robert.dev@gmx.de)",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/willi84/repo-quality"
  },
  "apps": {
    "check_urls": "backend/apps/check_urls"
  },
  "bugs": {
    "url": "https://github.com/willi84/repo-quality"
  },
  "main": "index.js",
  "devDependencies": {
    "@11ty/eleventy": "^1.0.0",
    "@babel/standalone": "7.13.14",
    "@types/jest": "^29.5.3",
    "@types/mock-fs": "^4.13.4",
    "@types/node": "^20.6.0",
    "@typescript-eslint/eslint-plugin": "^8.34.0",
    "@typescript-eslint/parser": "^8.34.0",
    "chokidar-cli": "^3.0.0",
    "dotenv-cli": "^7.4.2",
    "env-cmd": "^10.1.0",
    "eslint": "^9.28.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-prettier": "^5.4.1",
    "jest": "^29.6.2",
    "jest-environment-jsdom": "^29.6.2",
    "mock-fs": "^5.5.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.5.3",
    "serve": "^14.2.1",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "tsx": "^4.15.5",
    "typescript": "^4.2.3",
    "vite": "^2.1.4",
    "vscode": "^1.1.37"
  },
  "scripts": {
    "test": "jest --env=jsdom --coverage --runInBand",
    "test:watch": "jest --env=jsdom --watchAll  --coverage",
    "test:watch:strict": "jest --env=jsdom --watchAll  --coverage --runInBand --unhandled-rejections=strict",
    "test: clear": "jest --clearCache",
    "re-install": "rm -rf node_modules && rm -rf _site && rm -f package-lock.json && npm install && du -sh node_modules",
    "re-install_cache": "rm -rf node_modules && rm -rf _site && rm -f package-lock.json && npm cache verify && npm install && du -sh node_modules",
    "dev": "npm run start_app -- api & npm run start_app -- opencode & npm run start_app -- atomic & npm-run-all --parallel dev:md watch:atomic watch:api dev:eleventy dev:vite",
    "dev:eleventy": "eleventy --serve",
    "dev:vite": "vite",
    "build_app": "sh -c 'tsx src/backend/apps/$1/index.ts' --",
    "start_app": "sh -c 'tsx watch --clear-screen=false src/backend/apps/$1/index.ts' --",
    "start_apps": "npm run start_app:api & npm run start_app:check_urls",
    "start_app:api": "npm run start_app -- api",
    "start_app:opencode": "npm run start_app -- opencode",
    "start_app:atomic": "npm run start_app -- atomic",
    "build:api": "npm run build_app -- api",
    "build:opencode": "npm run build_app -- opencode",
    "start_app:check_urls": "npm run start_app -- check_urls",
    "build_all": "npm run build:api && npm run build:opencode && npm run build:vite && npm run build:eleventy",
    "build": "NODE_ENV=production npm run build_all",
    "dev:md": "chokidar 'items/*.md' -c 'npm run build:api'",
    "watch:atomic": "chokidar 'src/frontend' -c 'npm run build_app -- atomic'",
    "watch:api": "chokidar 'src/backend' -c 'npm run build_app -- api'",
    "watch:opencode": "chokidar 'src/backend' -c 'npm run build_app -- opencode'",
    "build:prod": "NODE_ENV=production npm run build",
    "build:eleventy": "eleventy",
    "build:debug_eleventy": "DEBUG=Eleventy* eleventy",
    "build:vite": "vite build --config vite.config.js",
    "prod_serve": "NODE_ENV=production npm run build && serve _site"
  }
}
